plugins {
  id "org.sonarqube" version "2.6"
}

apply plugin: 'java'//TODO: java-library?
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: "net.researchgate.release"

group 'at.technikum.mse.swf'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter() 
}

// To get more test output from Travis
test {
    testLogging {
        exceptionFormat "full" // default is "short"
    }
}

dependencies {
    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'
    compile 'org.slf4j:slf4j-api:1.8.0-beta2'
    // TODO: remove for library releases
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.8.0-beta2'
    testCompile 'org.assertj:assertj-core:3.9.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+" 
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.researchgate:gradle-release:2.3.5"
  }
}

// include license and README in distribution package
distZip {
    into(project.name + "-" + version) {
        from '.'
        include 'LICENSE.txt'
        include 'LICENSE-3RD-PARTY.txt'
    }

    // README.md is renamed to README.txt and Images are filtered
    into(project.name + "-" + version) {
    	from '.'
    	include 'README.md'

    	filter { String line ->
	    line.replaceAll('!?\\[.*\\]\\(.*\\)', '')
    	}

    	rename { String fileName ->
    	    fileName.replace('.md', '.txt')
    	}
    }
}

//set shorter automated release commit msgs
release {
    preCommitText = '[Gradle]'
    preTagCommitMessage = 'pre tag commit:'
    tagCommitMessage = 'creating tag:'
    newVersionCommitMessage = 'new version commit:'
}


sonarqube {
    properties {
        property "sonar.projectName", "SpreadsheetTestdata"
        property "sonar.projectKey", "at.technikum.mse.swf:SpreadsheetTestdata"
    }
}
